name: Android CI

on: [push]

jobs:
  apk:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Set up Go 1.15.8
      uses: actions/setup-go@v1
      with:
        go-version: 1.15.8
      id: go
    # https://github.com/actions/virtual-environments/issues/578
    - name: Fix missing NDK dependency
      run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;21.1.6352462"
    - name: Build rclone
      run: ./gradlew buildNative -p rclone
    - name: Build app
      run: ./gradlew assembleOssRelease
    - name: Upload APK
      uses: actions/upload-artifact@v2-preview
      with:
        name: universal.apk
        path: app/build/outputs/apk/oss/release/app-oss-universal-release-unsigned.apk

  release:
    name: Release APK
    needs: apk
#     if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v2
        with:
          name: apk  
          path: apk
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: apk
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.3"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.slug.outputs.sha8 }}
          release_name: Release ${{ steps.slug.outputs.sha8 }}
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.sign_app.outputs.signedReleaseFile}}
          asset_name: ${{ github.event.repository.name }}-${{ steps.slug.outputs.sha8 }}.apk
          asset_content_type: application/zip
